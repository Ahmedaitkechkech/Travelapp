<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">


    <link rel="stylesheet" href="/css/style.css">


</head>
<style>
    .form-fs-md .flatpickr {
    font-weight: 500;
    font-size: 1rem;
    
}
.card_hotel{
    height: 450px !important;
    width: 146% !important;
    
   
}

        .control-buttons {
            visibility: hidden;
        }


</style>

<body>
    <%- include('../partials/header-client.ejs') %>

    <!-- affiche form find location Hotel-->
 <section class="bg-light" class="pt- pt-lg-5">
        <div class="container">

            <div class="row g-4 g-lg-5">
                <div class="col-lg-6 position-relative mb-4 mb-md-0">
                    <h1 class="mb-4 mt-md-5 display-5"> Trouvez les meilleurs.
                        <span class="position-relative z-index-9"> Hôtels à proximité.</span>
                    </h1>
                    <p class="mb-4"> Nous vous proposons non seulement une option de séjour, mais une expérience dans votre budget pour profiter du luxe</p>

                    <div class="hstack gap-4 flex-wrap align-items-center">
                      
                        <a data-glightbox="" data-gallery="office-tour" href="#" class="d-block">
                            <div class="avatar avatar-md z-index-1 position-relative me-2">
                                <img class="avatar-img rounded-circle" src="/img/06.jpg" alt="avatar">

                            </div>

                        </a>
                        <a data-glightbox="" data-gallery="office-tour" href="#" class="d-block">
                            <div class="avatar avatar-md z-index-1 position-relative me-2">
                                <img class="avatar-img rounded-circle" src="/img/06.jpg" alt="avatar">

                            </div>

                        </a>
                        <a data-glightbox="" data-gallery="office-tour" href="#" class="d-block">
                            <div class="avatar avatar-md z-index-1 position-relative me-2">
                                <img class="avatar-img rounded-circle" src="/img/06.jpg" alt="avatar">

                            </div>

                        </a>
                    </div>
                </div>

                <div class="col-lg-6 position-relative">

                    <img src="/img/06.jpg" class="rounded" alt="">







                    <div
                        class="vstack gap-5 align-items-center position-absolute top-0 start-0 d-none d-md-flex mt-4 ms-n3">
                        <img class="icon-lg shadow-lg border border-3 border-white rounded-circle" src="/img/06.jpg"
                            alt="avatar">
                        <img class="icon-xl shadow-lg border border-3 border-white rounded-circle" src="/img/06.jpg"
                            alt="avatar">
                    </div>
                </div>
            </div>

         
            
		<div class="row">
			<div class="col-xl-10 position-relative mt-n3 mt-xl-n9">
				<!-- Title -->
				<h6 class="d-none d-xl-block mb-3">Check Availability</h6>

                <form action="/client-Hotel" method="post" class="card shadow rounded-3 position-relative p-4 pe-md-5 pb-5 pb-md-4">
                    <div class="row g-4 align-items-center justify-content-center" >
                        <div class="col-lg-4" style="width: 18vw;">
							<div class="d-flex">
								<!-- Icon -->
								<i class="bi bi-geo-alt fs-3 me-2 mt-2"></i>
								<!-- Date input -->
								<div class="form-control-border form-control-transparent form-fs-md">
                                    <label class="form-label">Location</label>
                                    <select name="Adresse_Hotel" class="form-control flatpickr " placeholder="Select hotel">
                                        <% 
                                        const uniqueAddresses = new Set(hotel.map(h => h.Adresse_Hotel));
                                        uniqueAddresses.forEach(address => { 
                                      %>
                                        <option value="<%= address %>"><%= address %></option>
                                      <% }) %>
                                    </select>
                                    </div>
							</div>
						</div>
						<!-- Check in -->
						<div class="col-lg-4" style="width: 18vw;" >
							<div class="d-flex">
								<!-- Icon -->
								<i class="bi bi-calendar fs-3 me-2 mt-2"></i>
								<!-- Date input -->
								<div class="form-control-border form-control-transparent form-fs-md">
									<label class="form-label">Check in - out</label>
									<input type="date" class="form-control flatpickr" data-mode="range" placeholder="Select date" value="19 Sep to 28 Sep">
								</div>
                                <button type="submit" class="btn-position-md-middle" style="border: none; background-color: transparent;">
                                    <a class="icon-lg btn btn-round btn-primary mb-0" href="#"><i class="fa fa-search fa-fw"></i></a>
                                </button>
							</div>
						</div>
                        </div>
            </div>
            </form>
			</div>
		</div>
	
        </div>

 </section>

 <!-- data statique -->
 <section class="py-0 py-md-5" style="margin-top: 4%;">
	<div class="container">
		<div class="row g-4 g-lg-7 justify-content-center align-items-center">
			<!-- Image -->
			<div class="col-5 col-sm-3 col-xl-2">
				<img src="/img/01.svg" class="grayscale" alt="">
			</div>
			<!-- Image -->
			<div class="col-5 col-sm-3 col-xl-2">
				<img src="/img/02.svg" class="grayscale" alt="">
			</div>
			<!-- Image -->
			<div class="col-5 col-sm-3 col-xl-2">
				<img src="/img/03.svg" class="grayscale" alt="">
			</div>
			<!-- Image -->
			<div class="col-5 col-sm-3 col-xl-2">
				<img src="/img/04.svg" class="grayscale" alt="">
			</div>
			<!-- Image -->
			<div class="col-5 col-sm-3 col-xl-2">
				<img src="/img/05.svg" class="grayscale" alt="">
			</div>
			<!-- Image -->
			<div class="col-5 col-sm-3 col-xl-2">
				<img src="/img/06.svg" class="grayscale" alt="">
			</div>
		</div>
	</div>
</section>

<!-- slide and foreach data-->
 <section class="bg-light" class="pb-0 py-md-5" style="margin-top: 4%;">
    <div class="container">
        <div class="row">
            <!-- Slider START -->
            <div class="col-lg-11 mx-auto">
                <div class="tiny-slider arrow-round arrow-border arrow-hover">
                    <div class="tiny-slider-inner" id="testimonial-slider" data-edge="2" data-items="1">
                        <!-- Slide item START -->
                        <% hotel.forEach(hotel => { %>
                            <div class="px-4 px-md-5">
                                <div class="row justify-content-between align-items-center">
                                    <div class="col-md-6 col-lg-5 position-relative">
                                        <!-- Image -->
                                        <img style="width: 100%;" src="<%= hotel.Photo %>" class="rounded-3 position-relative" alt="">
                                    </div>
                                    <div class="col-md-6 col-lg-6">
                                        <!-- Quote -->
                                        <span class="display-3 mb-0 text-primary"><i class="bi bi-quote"></i></span>
                                        <!-- Content -->
                                        <h5 class="fw-light"><%= hotel.Description %></h5>
                                        <!-- Rating -->
                                        <ul class="list-inline small mb-2">
                                            <li class="list-inline-item me-0"><i class="fa-solid fa-star text-warning"></i></li>
                                            <li class="list-inline-item me-0"><i class="fa-solid fa-star text-warning"></i></li>
                                            <li class="list-inline-item me-0"><i class="fa-solid fa-star text-warning"></i></li>
                                            <li class="list-inline-item me-0"><i class="fa-solid fa-star text-warning"></i></li>
                                            <li class="list-inline-item"><i class="fa-solid fa-star text-warning"></i></li>
                                        </ul>
                                        <!-- Title -->
                                        <h6 class="mb-0"><%= hotel.Nom_Hotel %></h6>
                                        <span>Ceo of Google</span>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!--  data affiche Hotel Top foeeachdata-->
<section style="margin-top: 4%;width: 90vw">
	<div class="container">
		<!-- Title -->
		<div class="row mb-4"  >
			<div class="col-12 text-center" style="margin-left: 5%;">
				<h2  class="mb-5">Mieux Hoteles</h2>
			</div>
		</div>

        <div class="row g-4 g-md-5 align-items-center justify-content-center " style="margin-left: 10%;">
    <% hotel.forEach(hotel => { %>
        <div class="col-6 col-sm-4 col-lg-3 col-xl-2" style="width: 20%; height: 40%;">
            <div class="card bg-transparent text-center p-1 h-100">
                <!-- Image -->
                <img style="border-radius: 50%; width: 110%; height: 150px  !important;" src="<%= hotel.Photo %>"  alt="">
                <div class="card-body p-0 pt-3" style="width: 100%;">
                    <span>30 min drive</span>
                </div>
            </div>
        </div>
    <% }) %>
</div>

        
    
		

			

		</div>
	</div>
</section>

<!--  data statique-->

<section class="bg-light  ">
	<div class="container ">
		<div class="row g-4 d-flex justify-content-between">

			<!-- Help -->
			<div class="col-md-6 col-xxl-4 d-flex ">
				<div class="bg-body d-flex  rounded-3 h-100 p-4 ">
					<h3><i class="fa-solid fa-hand-holding-heart"></i></h3>
					<div class="ms-3">
						<h5>24x7 Help</h5>
						<p class="mb-0">If we fall short of your expectation in any way, let us know</p>
					</div>
				</div>
			</div>

			<!-- Trust -->
			<div class="col-md-6 col-xxl-4">
				<div class="bg-body d-flex rounded-3 h-100 p-4">
					<h3><i class="fa-solid fa-hand-holding-usd"></i></h3>
					<div class="ms-3">
						<h5>Payment Trust</h5>
						<p class="mb-0">All refunds come with no questions asked guarantee</p>
					</div>
				</div>
			</div>
			

			

		</div>
	</div>
</section>


<%- include('../partials/footer-client.ejs') %>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        let slider = tns({
            container: '#testimonial-slider',
            controlsText: ['<i class="fa fa-chevron-left"></i>', '<i class="fa fa-chevron-right"></i>'],//affiche les icon la place next a,d prev
        });
    });
</script>



  
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.3/tiny-slider.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.3/min/tiny-slider.js"></script>

<!-- Chatbot Component -->
<div class="chatbot-wrapper">
    <div class="chatbot-container" id="chatbot-container">
        <div class="chatbot-header">
            <h5 class="m-0 text-white">Travel Assistant</h5>
            <div class="chatbot-actions">
                <button id="clear-chat" class="btn btn-sm" title="Clear chat history">
                    <i class="bi bi-trash"></i>
                </button>
                <button id="close-chatbot" class="btn btn-sm" title="Close chat">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
        </div>
        <div class="chatbot-messages" id="chatbot-messages">
            <div class="message bot-message">
                <div class="message-content">
                    Hello! I'm your travel assistant. How can I help you with your travel plans today?
                </div>
            </div>
        </div>
        <div class="chatbot-input">
            <form id="chatbot-form">
                <div class="input-group">
                    <input type="text" id="user-message" class="form-control" placeholder="Type your message..." required>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-send"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>
    
    <div class="chatbot-button" id="chatbot-button">
        <i class="bi bi-chat-dots-fill"></i>
    </div>
</div>

<!-- Custom Confirmation Modal -->
<div id="confirmation-modal" class="custom-modal">
    <div class="modal-backdrop"></div>
    <div class="modal-content">
        <div class="modal-header">
            <h5>Clear Chat History</h5>
        </div>
        <div class="modal-body">
            <p>Are you sure you want to clear the chat history?</p>
        </div>
        <div class="modal-footer">
            <button id="modal-cancel" class="btn btn-secondary">Cancel</button>
            <button id="modal-confirm" class="btn btn-danger">Clear History</button>
        </div>
    </div>
</div>

<!-- Chatbot Styles -->
<style>
    .chatbot-wrapper {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
        font-family: inherit;
    }
    
    .chatbot-button {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: #0d6efd;
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        font-size: 24px;
        transition: all 0.3s ease;
    }
    
    .chatbot-button:hover {
        background-color: #0b5ed7;
        transform: scale(1.05);
    }
    
    .chatbot-container {
        position: absolute;
        bottom: 80px;
        right: 0;
        width: 350px;
        height: 500px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        display: none;
        flex-direction: column;
        overflow: hidden;
    }
    
    .chatbot-header {
        padding: 15px;
        background-color: #0d6efd;
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .chatbot-actions {
        display: flex;
        gap: 5px;
    }
    
    .chatbot-actions button {
        color: white;
        padding: 0px 5px;
        background: transparent;
        border: none;
    }
    
    .chatbot-messages {
        flex-grow: 1;
        padding: 15px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .message {
        max-width: 80%;
        padding: 10px 15px;
        border-radius: 15px;
        margin-bottom: 5px;
    }
    
    .user-message {
        background-color: #e7f3ff;
        align-self: flex-end;
        border-bottom-right-radius: 5px;
    }
    
    .bot-message {
        background-color: #f1f1f1;
        align-self: flex-start;
        border-bottom-left-radius: 5px;
    }
    
    .message-content {
        word-break: break-word;
    }
    
    .chatbot-input {
        padding: 15px;
        border-top: 1px solid #eee;
    }
    
    .chatbot-input form {
        display: flex;
    }
    
    .chatbot-input .input-group {
        width: 100%;
    }
    
    /* Typing indicator */
    .typing-indicator {
        display: flex;
        padding: 10px 15px;
        background-color: #f1f1f1;
        border-radius: 15px;
        border-bottom-left-radius: 5px;
        align-self: flex-start;
        margin-bottom: 5px;
        width: fit-content;
    }
    
    .typing-indicator span {
        height: 8px;
        width: 8px;
        background-color: #666;
        border-radius: 50%;
        display: inline-block;
        margin-right: 5px;
        animation: typing 1s infinite ease-in-out;
    }
    
    .typing-indicator span:nth-child(2) {
        animation-delay: 0.2s;
    }
    
    .typing-indicator span:nth-child(3) {
        animation-delay: 0.4s;
        margin-right: 0;
    }
    
    @keyframes typing {
        0% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-5px);
        }
        100% {
            transform: translateY(0px);
        }
    }

    /* Responsive design */
    @media (max-width: 576px) {
        .chatbot-container {
            width: 300px;
            right: 0;
            bottom: 70px;
        }
        
        .chatbot-wrapper {
            bottom: 20px;
            right: 20px;
        }
    }

    /* Custom Modal Styles */
    .custom-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2000;
}

.modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
    position: relative;
    background: white;
    max-width: 400px;
    margin: 100px auto;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    z-index: 2001;
}

.modal-header {
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
    margin-bottom: 15px;
}

.modal-header h5 {
    margin: 0;
    font-size: 1.2rem;
}

.modal-body p {
    margin: 0 0 15px 0;
}

.modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 15px;
}

.btn {
    padding: 8px 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.btn-secondary {
    background-color: #6c757d;
    color: white;
}

.btn-danger {
    background-color: #dc3545;
    color: white;
}

.btn:hover {
    opacity: 0.9;
}
</style>

<!-- Chatbot JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Chatbot elements
    const chatbotButton = document.getElementById('chatbot-button');
    const chatbotContainer = document.getElementById('chatbot-container');
    const closeButton = document.getElementById('close-chatbot');
    const clearButton = document.getElementById('clear-chat');
    const chatbotForm = document.getElementById('chatbot-form');
    const userInput = document.getElementById('user-message');
    const messagesContainer = document.getElementById('chatbot-messages');
    
    // Modal elements
    const modal = document.getElementById('confirmation-modal');
    const modalConfirm = document.getElementById('modal-confirm');
    const modalCancel = document.getElementById('modal-cancel');

    // Chat state
    let historyLoaded = false;
    const defaultWelcomeMessage = "Hello! I'm your travel assistant. How can I help you with your travel plans today?";

    // Initial setup - welcome message is added in HTML

    // Chatbot toggle
    chatbotButton.addEventListener('click', function() {
        if (chatbotContainer.style.display === 'flex') {
            chatbotContainer.style.display = 'none';
        } else {
            chatbotContainer.style.display = 'flex';
            userInput.focus();
            if (!historyLoaded) loadChatHistory();
            scrollToBottom();
        }
    });

    // Close chatbot
    closeButton.addEventListener('click', () => chatbotContainer.style.display = 'none');

    // Clear chat handler
    clearButton.addEventListener('click', showConfirmationModal);

    // Form submission
    chatbotForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const message = userInput.value.trim();
        
        if (message) {
            addMessage(message, 'user');
            userInput.value = '';
            showTypingIndicator();
            
            fetch('/send-message', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ message })
            })
            .then(response => response.json())
            .then(data => {
                removeTypingIndicator();
                addMessage(data.response, 'bot');
            })
            .catch(error => {
                removeTypingIndicator();
                addMessage('Sorry, I encountered an error. Please try again.', 'bot');
                console.error('Error:', error);
            });
        }
    });

    // Modal functions
    function showConfirmationModal() {
        modal.style.display = 'block';
    }

    function hideConfirmationModal() {
        modal.style.display = 'none';
    }

    modalConfirm.addEventListener('click', function() {
        hideConfirmationModal();
        fetch('/clear-chat')
            .then(response => {
                if (response.ok) {
                    // Clear all messages except welcome message
                    const welcomeMessage = messagesContainer.querySelector('.bot-message');
                    messagesContainer.innerHTML = '';
                    if (welcomeMessage) {
                        messagesContainer.appendChild(welcomeMessage);
                    } else {
                        addWelcomeMessage();
                    }
                    historyLoaded = true;
                }
            })
            .catch(error => {
                console.error('Error clearing chat:', error);
                addMessage('Failed to clear chat history. Please try again.', 'bot');
            });
    });

    modalCancel.addEventListener('click', hideConfirmationModal);
    modal.addEventListener('click', (event) => {
        if (event.target === modal) hideConfirmationModal();
    });

    // Chat functions
    function loadChatHistory() {
        showTypingIndicator();
        fetch('/get-chat-history')
            .then(response => response.json())
            .then(data => {
                removeTypingIndicator();
                
                // Save the welcome message
                const welcomeMessage = messagesContainer.querySelector('.bot-message');
                
                // Clear existing messages
                messagesContainer.innerHTML = '';
                
                // Re-add welcome message
                if (welcomeMessage) {
                    messagesContainer.appendChild(welcomeMessage.cloneNode(true));
                } else {
                    addWelcomeMessage();
                }
                
                // Add chat history if it exists
                if (data.history?.length > 0) {
                    data.history.forEach(item => {
                        addMessage(item.message, 'user');
                        addMessage(item.response, 'bot');
                    });
                }
                
                historyLoaded = true;
                scrollToBottom();
            })
            .catch(error => {
                removeTypingIndicator();
                console.error('Error loading history:', error);
                
                // Ensure welcome message is present
                if (!messagesContainer.querySelector('.bot-message')) {
                    addWelcomeMessage();
                }
            });
    }

    function addMessage(message, sender) {
        const messageElement = document.createElement('div');
        messageElement.className = `message ${sender}-message`;
        const contentElement = document.createElement('div');
        contentElement.className = 'message-content';
        contentElement.textContent = message;
        messageElement.appendChild(contentElement);
        messagesContainer.appendChild(messageElement);
        scrollToBottom();
    }
    
    function addWelcomeMessage() {
        addMessage(defaultWelcomeMessage, 'bot');
    }

    function showTypingIndicator() {
        const typingIndicator = document.createElement('div');
        typingIndicator.className = 'typing-indicator';
        typingIndicator.innerHTML = '<span></span><span></span><span></span>';
        typingIndicator.id = 'typing-indicator';
        messagesContainer.appendChild(typingIndicator);
        scrollToBottom();
    }

    function removeTypingIndicator() {
        const typingIndicator = document.getElementById('typing-indicator');
        if (typingIndicator) typingIndicator.remove();
    }

    function scrollToBottom() {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    // Initialize chat if already open
    if (chatbotContainer.style.display === 'flex') loadChatHistory();
});
</script>

</body>

</html>